security:
    encoders:
        Symfony\Component\Security\Core\User\User: bcrypt
        App\Entity\Interview\InterviewSession:
            algorithm: plaintext
#            hash_algorithm: plaintext
#            key_length: 40
#            ignore_case: false
#            encode_as_base64: false

    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    ctas:
                        password: '%env(CTAS_API_KEY)%'
                        roles: 'ROLE_SUPER_ADMIN'
        jwt:
            lexik_jwt:
                class: App\Security\JWTUser

        doctrine_entity_interview_session:
            entity:
                class: App\Entity\Interview\InterviewSession
                property: candidateCode

# $2y$13$zW3Nq2WrYBNlhDcosTH.peP/43wNoa4eirfrcS8ZfZQeop6A2HQBi
    firewalls:
        ctas:
            pattern:  ^/ctas
            stateless: true
            anonymous: true
            form_login:
                provider: in_memory
                check_path:               /ctas/login
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                username_parameter: _username
                password_parameter: _apikey
                require_previous_session: false

        api_login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            form_login:
                provider: doctrine_entity_interview_session
                check_path:               /api/login
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        api:
            pattern:   ^/
            stateless: true
            anonymous: true
            provider: jwt
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        refresh:
            pattern:  ^/api/token/refresh
            stateless: true
            anonymous: true

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            # activate different ways to authenticate

            # http_basic: ~
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # https://symfony.com/doc/current/security/form_login_setup.html
    access_control:
        - { path: ^/ctas, roles: IS_AUTHENTICATED_ANONYMOUSLY, ips: ['%env(CTAS_IP)%'] }
        - { path: ^/ctas, roles: ROLE_SUPER_ADMIN }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY, ips: ['%env(DEV_IP)%'] }
        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

        # ...
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # ...